plugins {
	id 'org.springframework.boot' version '2.4.13'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
}

group = 'com.bosch.sast.sudoku'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {

	// We will use GSON instead of Jackson
	implementation 'com.google.code.gson:gson'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'

	//DTO Mapper
	implementation 'org.modelmapper:modelmapper:3.1.0'

	//Metrics:
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus:1.9.3'

	//Netflix
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.0.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.10.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard:2.2.10.RELEASE'
	//OpenApi
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'org.springframework.cloud:spring-cloud-dependencies:2021.0.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'junit'
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.0'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.0'
}

test {
	useJUnitPlatform()
}
